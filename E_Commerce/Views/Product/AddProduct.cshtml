@model E_Commerce.Models.ProductModel
@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}


<!-- page-title-box -->
<div class="page-content-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card m-b-20">
                    <div class="card-body">
                        <h2 class="mb-4 text-center">Product Form</h2>
                        <div class="color-picker-inputs">
                            <form id="SaveProduct" action="#" method="post" enctype="multipart/form-data">
                                @Html.HiddenFor(a=> a.ProductID)
                                @Html.HiddenFor(a=> a.Image)
                                <div class="form-group">
                                    <label class="control-label">CategoryID</label>
                                    @Html.DropDownListFor(a => a.CategoryID, new SelectList(@ViewBag.Category, "CategoryID", "CategoryName"), "--Select Category--", new { @class = "form-control", onchange = "GetSubCategories(this.value)" })
                                    <span id="spCategoryID" style="display:none;color:red;font-size:small;">Please Enter Category</span>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">SubCategoryID</label>
                                    @Html.DropDownListFor(a => a.SubCategoryID, new SelectList("", "SubCategoryID", "SubCategoryName"), "--Select SubCategory--", new { @class = "form-control" })
                                    <span id="spSubCategoryID" style="display:none;color:red;font-size:small;">Please Enter SubCategory</span>
                                </div>
                                <div class="form-group">
                                    <label>Product Name</label>
                                    @Html.TextBoxFor(a => a.ProductName, new { @class = "form-control" })
                                    <span id="spProductName" style="display:none;color:red;font-size:small;">Please Enter ProductName</span>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">ColorID</label>
                                    @Html.DropDownListFor(a => a.ColorID, new SelectList(@ViewBag.Color, "ColorID", "ColorName"), "--Select Color--", new { @class = "form-control" })
                                    <span id="spColorID" style="display:none;color:red;font-size:small;">Please Enter Color</span>
                                </div>
                                <div class="form-group">
                                    <label>Quantity</label>
                                    @Html.TextBoxFor(a => a.Quantity, new { @class = "form-control", type = "number" })
                                    <span id="spQuantity" style="display:none;color:red;font-size:small;">Please Enter Quantity</span>
                                </div>
                                <div class="form-group">
                                    <label>Price</label>
                                    @Html.TextBoxFor(a => a.Price, new { @class = "form-control", type = "price" })
                                    <span id="spPrice" style="display:none;color:red;font-size:small;">Please Enter Price</span>
                                </div>
                                <div class="form-group">
                                    <label class="control-label">Status</label>
                                    @Html.DropDownListFor(a => a.Status, new List<SelectListItem>() {
                                   new SelectListItem(){Text = "--Select Item--" , Value="-1"},
                                   new SelectListItem(){Text = "Active" , Value="1"},
                                   new SelectListItem(){Text = "InActive" , Value="0"},
                               }, new { @class = "form-control" })
                                    <span id="spStatus" style="display:none;color:red;font-size:small;">Please Enter Status</span>
                                </div>
                                <div class="form-group">
                                    <label>Image</label>
                                    @Html.TextBoxFor(a => a.ImageFile, new { @class = " dropify", type = "file", data_default_file = "/dropify/noimage.png" })
                                    <span id="spImage" style="display:none;color:red;font-size:small;">Please Enter Image</span>
                                </div>

                                <div class="text-center">
                                    <button type="submit" id="btnSubmit" class=" btn btn-outline-primary">Save</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div> <!-- end col -->
            <!-- end col -->
        </div> <!-- end row -->

    </div>
    <!-- end container-fluid -->
</div>
<!-- end page content-->
<div class="wrapper">

    <!-- page-title-box -->

    <div class="page-content-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card m-b-20">
                        <div class="card-body">

                            <h2 class="mb-4 text-center">Product Datatable</h2>

                            <div id="divload">

                            </div>


                        </div>
                    </div>
                </div> <!-- end col -->
            </div> <!-- end row -->
        </div>
        <!-- end container-fluid -->
    </div>
    <!-- end page content-->
</div>
@section script{
    <script>
        $(document).ready(function () {
            $(".dropify").dropify();
            SubCategoryList();
        });

        //function validate() {
        //    if ($("#CategoryID").val() != "" && $("#SubCategoryID").val() != "" && $("#ProductName").val() != "" && $("#Status").val() != "" && $("#ImageFile").val() != "") {
        //        SaveData()
        //    }
        //    else {
        //        swal("Error", "Please fill all the required field!");             
        //    }
        //}


        
        $("#btnSubmit").click(function (e) {
            if (validate() == 8) {
                SaveData();
            }
            else {
                return false;
            }
        });


        function validate() {
          
               var check = 0;
                if ($("#CategoryID").val() == "") {
                   $("#spCategoryID").show();
               }

               else {
                   $("#spCategoryID").hide();
                   check++;
                }

                if ($("#SubCategoryID").val() == "") {
                   $("#spSubCategoryID").show();
                }
               else {
                   $("#spSubCategoryID").hide();
                   check++;
               }
                if ($("#ProductName").val() == "") {
                   $("#spProductName").show();
               }
               else {
                   $("#spProductName").hide();
                   check++;
               }
                if ($("#ColorID").val() == "") {
                   $("#spColorID").show();
               }
               else {
                   $("#spColorID").hide();
                   check++;
                 }

                if ($("#Quantity").val() == "") {
                   $("#spQuantity").show();
               }
               else {
                   $("#spQuantity").hide();
                   check++;
               }
                if ($("#Price").val() == "") {
                   $("#spPrice").show();
               }
               else {
                   $("#spPrice").hide();
                   check++;
               }
                if ($("#Status").val() == "-1") {
                   $("#spStatus").show();
               }
               else {
                   $("#spStatus").hide();
                   check++;
               }
                if ($("#ImageFile").val() == "") {
                   $("#spImage").show();
               }
               else {
                   $("#spImage").hide();
                   check++;
            }
            

               return check;
        }




        function SaveData() {
                event.preventDefault();
                var formData = new FormData(document.getElementById("SaveProduct"));
                $.ajax({
                    url: '@Url.Action("Save", "Product")',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    success: function (res) {
                        if (res == 1) {
                            swal("Success!", "Successfully Save the Data", "success");
                            SubCategoryList();
                        }
                        else if (res == 2)
                        {
                            swal("Warning!", "Sorry This Product is Already Exist", "Error");
                        }
                        else {
                            swal("Oops!", "Something went gone wrong", "error");
                        }
                    }
                });
                return false;
        }



        function SubCategoryList() {
            $.ajax({
                type: 'Get',
                url: '@Url.Action("listProduct", "Product")',
                success: function (data) {
                    $("#divload").html(data);
                   // $("#tableCategory").DataTable();
                }
            });
        }

        function Delete(id, ImageName) {

            swal({
                title: "Are you Sure",
                text: "Warning: This action cannnot be undone.",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {

                if (willDelete) {

                    $.ajax({
                        type: 'Post',
                        url: '@Url.Action("DeleteProduct","Product")',
                        data: { id: id, ImageName: ImageName },
                        success: function (data) {
                            if (data == 1) {
                                SubCategoryList();
                            }
                            else if (data == 2) {
                                alert("Not Allowed");
                            }
                        }
                    });
                }
            });
        }



        function GetSubCategories(CategoryId) {
            //alert(CategoryId);
            var DropDown = $("#SubCategoryID");
              $.ajax({
                  type: 'Get',
                  url: '@Url.Action("SubCategories","Product")',
                  data: { CategoryId: CategoryId },
                  success: function (res) {
                      DropDown.empty();
                      $.each(res, function (val, text) {
                          /console.log(val +""+text.cateId+""+text.Category);/
                          DropDown.append($("<option/>").val(text.SubCategoryID).text(text.SubCategoryName));
                      });
                  }
              });
        }



        function Edit(id) {
            $.ajax({
                type: 'Get',
                url: '@Url.Action("Edit","Product")',
                data: { ProductID: id },
                success: function (data) {
                    $("#CategoryID").val(data.CategoryId);
                    $("#SubCategoryID").val(data.SubCategoryID);
                    $("#ProductID").val(data.processID);
                    $("#ProductName").val(data.ProductName);
                    $("#ColorID").val(data.ColorID);
                    $("#Quantity").val(data.Quantity);
                    $("#Price").val(data.Price);
                    $("#Status").val(data.Status);
                    $('.dropify - render > ').attr('src', data.Image);
                    $("#Image").val(data.Image);
                }
            })
        }






    </script>
}